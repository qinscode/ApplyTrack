{
  // You shouldn't use formatter with this ESLint config
  "[javascript][javascriptreact][typescript][typescriptreact][json][jsonc]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    },
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },

  // If you are using ESLint 9.9.0 and eslint.config.ts
  "eslint.options": {
    "flags": ["unstable_ts_config"]
  },

  // If you do not want to auto fix some rules on save
  // You can put this in your user settings or workspace settings
  "eslint.codeActionsOnSave.rules": [
    "!prefer-const",
    "!unused-imports/no-unused-imports",
    // "!@stylistic/jsx-self-closing-comp",
    // "!tailwindcss/classnames-order",
    "*"
  ],

  // If you want to silent stylistic rules
  // You can put this in your user settings or workspace settings
  "eslint.rules.customizations": [
    { "rule": "@stylistic/*", "severity": "off", "fixable": true },
    { "rule": "antfu/consistent-list-newline", "severity": "off" },
    { "rule": "hyoban/jsx-attribute-spacing", "severity": "off" },
    { "rule": "simple-import-sort/*", "severity": "off" },
    { "rule": "prefer-const", "severity": "off" },
    { "rule": "unused-imports/no-unused-imports", "severity": "off" },
    { "rule": "tailwindcss/classnames-order", "severity": "off" }
  ],
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "search.exclude": {
    "**/dist/**": true,
    "public/**/*.js": true,
    "**/*.svg": true
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "tailwindCSS.experimental.classRegex": [
    ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    ["cn\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"]
  ],
  "i18n-ally.localesPaths": ["src/i18n", "src/i18n/locales"],
  "i18n-ally.sourceLanguage": "en",
  "i18n-ally.enabledFrameworks": ["i18next", "react"],
  "i18n-ally.keystyle": "nested"
}
